{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Loki\\\\Desktop\\\\resto\\\\admin-panel\\\\src\\\\components\\\\TableGrid.js\",\n  _s = $RefreshSig$();\n// src/components/TableGrid.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TableCard from './TableCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableGrid = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  useEffect(() => {\n    // Mock backend API call to fetch tables data\n    axios.get('http://localhost:5000/api/tables').then(response => setTables(response.data)).catch(error => console.error(error));\n  }, []);\n\n  // Calculate the total number of rows (30) for the grid\n  const columns = 50; // 50 columns for the grid\n  const rows = Math.ceil(tables.length / columns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-96 overflow-auto p-4 border border-gray-300 bg-gray-100 rounded-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-50 gap-1\",\n      children: Array.from({\n        length: rows\n      }).map((_, rowIndex) => [...Array(columns)].map((_, colIndex) => {\n        const tableIndex = rowIndex * columns + colIndex;\n        if (tables[tableIndex]) {\n          return /*#__PURE__*/_jsxDEV(TableCard, {\n            table: tables[tableIndex]\n          }, tables[tableIndex].number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 border\"\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this); // Empty cell\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TableGrid, \"NtCfh5ZY9JPknbpxFuMV2U0OF1k=\");\n_c = TableGrid;\nexport default TableGrid;\nvar _c;\n$RefreshReg$(_c, \"TableGrid\");","map":{"version":3,"names":["React","useState","useEffect","axios","TableCard","jsxDEV","_jsxDEV","TableGrid","_s","tables","setTables","get","then","response","data","catch","error","console","columns","rows","Math","ceil","length","className","children","Array","from","map","_","rowIndex","colIndex","tableIndex","table","number","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Loki/Desktop/resto/admin-panel/src/components/TableGrid.js"],"sourcesContent":["// src/components/TableGrid.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TableCard from './TableCard';\r\n\r\nconst TableGrid = () => {\r\n  const [tables, setTables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Mock backend API call to fetch tables data\r\n    axios.get('http://localhost:5000/api/tables')\r\n      .then(response => setTables(response.data))\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  // Calculate the total number of rows (30) for the grid\r\n  const columns = 50; // 50 columns for the grid\r\n  const rows = Math.ceil(tables.length / columns);\r\n\r\n  return (\r\n    <div className=\"w-full h-96 overflow-auto p-4 border border-gray-300 bg-gray-100 rounded-lg\">\r\n      <div className=\"grid grid-cols-50 gap-1\">\r\n        {Array.from({ length: rows }).map((_, rowIndex) => (\r\n          [...Array(columns)].map((_, colIndex) => {\r\n            const tableIndex = rowIndex * columns + colIndex;\r\n            if (tables[tableIndex]) {\r\n              return (\r\n                <TableCard key={tables[tableIndex].number} table={tables[tableIndex]} />\r\n              );\r\n            }\r\n            return <div key={colIndex} className=\"w-12 h-12 border\" />; // Empty cell\r\n          })\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableGrid;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACQ,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAIH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,OAAO,GAAG,EAAE,CAAC,CAAC;EACpB,MAAMC,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACZ,MAAM,CAACa,MAAM,GAAGJ,OAAO,CAAC;EAE/C,oBACEZ,OAAA;IAAKiB,SAAS,EAAC,6EAA6E;IAAAC,QAAA,eAC1FlB,OAAA;MAAKiB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCC,KAAK,CAACC,IAAI,CAAC;QAAEJ,MAAM,EAAEH;MAAK,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,KAC5C,CAAC,GAAGJ,KAAK,CAACP,OAAO,CAAC,CAAC,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEE,QAAQ,KAAK;QACvC,MAAMC,UAAU,GAAGF,QAAQ,GAAGX,OAAO,GAAGY,QAAQ;QAChD,IAAIrB,MAAM,CAACsB,UAAU,CAAC,EAAE;UACtB,oBACEzB,OAAA,CAACF,SAAS;YAAiC4B,KAAK,EAAEvB,MAAM,CAACsB,UAAU;UAAE,GAArDtB,MAAM,CAACsB,UAAU,CAAC,CAACE,MAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA8B,CAAC;QAE5E;QACA,oBAAO/B,OAAA;UAAoBiB,SAAS,EAAC;QAAkB,GAAtCO,QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgC,CAAC,CAAC,CAAC;MAC9D,CAAC,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA/BID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}