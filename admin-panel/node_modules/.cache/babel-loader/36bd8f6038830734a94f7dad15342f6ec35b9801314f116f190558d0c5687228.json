{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Loki\\\\Desktop\\\\resto\\\\admin-panel\\\\src\\\\components\\\\TableGrid.js\";\n// src/components/TableGrid.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableGrid = () => {\n  // Create a 20x20 grid (400 squares)\n  const totalSquares = 400;\n  const grid = new Array(totalSquares).fill(null);\n  const handleClick = index => {\n    // For now, log the clicked square index (you can add more functionality here)\n    console.log(`Square ${index + 1} clicked`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-96 p-4 border border-gray-300 bg-gray-100 rounded-lg overflow-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-20 gap-1\",\n      children: grid.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-12 h-12 border bg-gray-200 flex items-center justify-center cursor-pointer\",\n        onClick: () => handleClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: `Table ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = TableGrid;\nexport default TableGrid;\nvar _c;\n$RefreshReg$(_c, \"TableGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TableGrid","totalSquares","grid","Array","fill","handleClick","index","console","log","className","children","map","_","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Loki/Desktop/resto/admin-panel/src/components/TableGrid.js"],"sourcesContent":["// src/components/TableGrid.js\r\nimport React from 'react';\r\n\r\nconst TableGrid = () => {\r\n  // Create a 20x20 grid (400 squares)\r\n  const totalSquares = 400;\r\n  const grid = new Array(totalSquares).fill(null);\r\n\r\n  const handleClick = (index) => {\r\n    // For now, log the clicked square index (you can add more functionality here)\r\n    console.log(`Square ${index + 1} clicked`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-96 p-4 border border-gray-300 bg-gray-100 rounded-lg overflow-auto\">\r\n      <div className=\"grid grid-cols-20 gap-1\">\r\n        {grid.map((_, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"w-12 h-12 border bg-gray-200 flex items-center justify-center cursor-pointer\"\r\n            onClick={() => handleClick(index)}\r\n          >\r\n            {/* You can display the table number here, e.g., `Table 1`, `Table 2`, etc. */}\r\n            <p className=\"text-xs\">{`Table ${index + 1}`}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableGrid;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,MAAMC,YAAY,GAAG,GAAG;EACxB,MAAMC,IAAI,GAAG,IAAIC,KAAK,CAACF,YAAY,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;EAE/C,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B;IACAC,OAAO,CAACC,GAAG,CAAC,UAAUF,KAAK,GAAG,CAAC,UAAU,CAAC;EAC5C,CAAC;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,6EAA6E;IAAAC,QAAA,eAC1FX,OAAA;MAAKU,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCR,IAAI,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEN,KAAK,kBACjBP,OAAA;QAEEU,SAAS,EAAC,8EAA8E;QACxFI,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACC,KAAK,CAAE;QAAAI,QAAA,eAGlCX,OAAA;UAAGU,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAE,SAASJ,KAAK,GAAG,CAAC;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAL5CX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BIlB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}