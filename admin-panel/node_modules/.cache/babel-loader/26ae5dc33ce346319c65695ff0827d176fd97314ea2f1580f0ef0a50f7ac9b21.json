{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Loki\\\\Desktop\\\\resto\\\\admin-panel\\\\src\\\\components\\\\TableGrid.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableGrid = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  useEffect(() => {\n    // Fetch table data from the backend\n    axios.get('http://localhost:5000/api/tables').then(response => setTables(response.data)).catch(error => console.error(error));\n  }, []);\n\n  // Calculate number of rows based on the number of tables\n  const rows = Math.ceil(tables.length / 30);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-30 gap-1 p-4\",\n    children: Array.from({\n      length: rows\n    }).map((_, rowIndex) => [...Array(30)].map((_, colIndex) => {\n      const tableIndex = rowIndex * 30 + colIndex;\n      if (tables[tableIndex]) {\n        return /*#__PURE__*/_jsxDEV(TableCard, {\n          table: tables[tableIndex]\n        }, tables[tableIndex].number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-12 h-12 border\"\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this); // Empty cell\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TableGrid, \"NtCfh5ZY9JPknbpxFuMV2U0OF1k=\");\n_c = TableGrid;\nvar _c;\n$RefreshReg$(_c, \"TableGrid\");","map":{"version":3,"names":["TableGrid","_s","tables","setTables","useState","useEffect","axios","get","then","response","data","catch","error","console","rows","Math","ceil","length","_jsxDEV","className","children","Array","from","map","_","rowIndex","colIndex","tableIndex","TableCard","table","number","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Loki/Desktop/resto/admin-panel/src/components/TableGrid.js"],"sourcesContent":["const TableGrid = () => {\r\n  const [tables, setTables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch table data from the backend\r\n    axios.get('http://localhost:5000/api/tables')\r\n      .then(response => setTables(response.data))\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  // Calculate number of rows based on the number of tables\r\n  const rows = Math.ceil(tables.length / 30);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-30 gap-1 p-4\">\r\n      {Array.from({ length: rows }).map((_, rowIndex) => (\r\n        [...Array(30)].map((_, colIndex) => {\r\n          const tableIndex = rowIndex * 30 + colIndex;\r\n          if (tables[tableIndex]) {\r\n            return (\r\n              <TableCard key={tables[tableIndex].number} table={tables[tableIndex]} />\r\n            );\r\n          }\r\n          return <div key={colIndex} className=\"w-12 h-12 border\" />; // Empty cell\r\n        })\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAIN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACd,MAAM,CAACe,MAAM,GAAG,EAAE,CAAC;EAE1C,oBACEC,OAAA;IAAKC,SAAS,EAAC,6BAA6B;IAAAC,QAAA,EACzCC,KAAK,CAACC,IAAI,CAAC;MAAEL,MAAM,EAAEH;IAAK,CAAC,CAAC,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,KAC5C,CAAC,GAAGJ,KAAK,CAAC,EAAE,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEE,QAAQ,KAAK;MAClC,MAAMC,UAAU,GAAGF,QAAQ,GAAG,EAAE,GAAGC,QAAQ;MAC3C,IAAIxB,MAAM,CAACyB,UAAU,CAAC,EAAE;QACtB,oBACET,OAAA,CAACU,SAAS;UAAiCC,KAAK,EAAE3B,MAAM,CAACyB,UAAU;QAAE,GAArDzB,MAAM,CAACyB,UAAU,CAAC,CAACG,MAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8B,CAAC;MAE5E;MACA,oBAAOhB,OAAA;QAAoBC,SAAS,EAAC;MAAkB,GAAtCO,QAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,CAAC,CAAC;IAC9D,CAAC,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjC,EAAA,CA5BID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}